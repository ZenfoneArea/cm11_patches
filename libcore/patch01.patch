diff --git a/NativeCode.mk b/NativeCode.mk
index 1a47ee4..2075b65 100644
--- a/NativeCode.mk
+++ b/NativeCode.mk
@@ -87,6 +87,12 @@ LOCAL_MODULE_TAGS := optional
 LOCAL_MODULE := libjavacore
 LOCAL_ADDITIONAL_DEPENDENCIES := $(LOCAL_PATH)/NativeCode.mk
 include external/stlport/libstlport.mk
+
+ifeq ($(INTEL_HOUDINI), true)
+    LOCAL_CPPFLAGS += -DWITH_HOUDINI
+    LOCAL_STATIC_LIBRARIES += houdini_hook
+endif
+
 include $(BUILD_SHARED_LIBRARY)
 
 # Platform conscrypt crypto library
diff --git a/luni/src/main/native/libcore_io_Posix.cpp b/luni/src/main/native/libcore_io_Posix.cpp
index cf1b714..f374cf0 100644
--- a/luni/src/main/native/libcore_io_Posix.cpp
+++ b/luni/src/main/native/libcore_io_Posix.cpp
@@ -937,12 +937,20 @@ static void Posix_munmap(JNIEnv* env, jobject, jlong address, jlong byteCount) {
     throwIfMinusOne(env, "munmap", TEMP_FAILURE_RETRY(munmap(ptr, byteCount)));
 }
 
+#ifdef WITH_HOUDINI
+extern "C" int houdini_hook_open(const char *path, int flags, int mode);
+#endif
+
 static jobject Posix_open(JNIEnv* env, jobject, jstring javaPath, jint flags, jint mode) {
     ScopedUtfChars path(env, javaPath);
     if (path.c_str() == NULL) {
         return NULL;
     }
+#ifdef WITH_HOUDINI
+    int fd = throwIfMinusOne(env, "open", houdini_hook_open(path.c_str(), flags, mode));
+#else
     int fd = throwIfMinusOne(env, "open", TEMP_FAILURE_RETRY(open(path.c_str(), flags, mode)));
+#endif
     return fd != -1 ? jniCreateFileDescriptor(env, fd) : NULL;
 }
 
